# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '16abdfd3-399d-4d53-a6b3-be884474d479'
  imageRepository: 'identificacionyregistrop'
  containerRegistry: 'crticplayground.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Kubernetes@1
      displayName: Deploy to penitenciaria-dev
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'penitenciaria-dev'
        namespace: 'penitenciaria-dev'
        command: 'set'
        arguments: 'image deployment/identyregis intedyregis=crticplayground.azurecr.io/identificacionyregistrop:$(Build.BuildId)'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
    - task: Kubernetes@1
      displayName: Deploy to penitenciaria-prod
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'penitenciaria-prod'
        namespace: 'penitenciaria-prod'
        command: 'set'
        arguments: 'image deployment/identyregis intedyregis=crticplayground.azurecr.io/identificacionyregistrop:$(Build.BuildId)'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'